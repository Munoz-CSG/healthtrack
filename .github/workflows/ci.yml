name: CI HealthTrack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Clona el código del repositorio
      - name: Checkout del código
        uses: actions/checkout@v4

      # Configura Java 17
      - name: Configuración de Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Compila el proyecto y ejecuta pruebas unitarias, de regresión y funcionales
      - name: Compilación y pruebas con Maven
        run: mvn clean verify

      # Análisis de calidad con SonarCloud
      - name: Análisis de calidad con SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=Munoz-CSG_healthtrack
            -Dsonar.organization=munozdev
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=target/classes

      # Instala JMeter en el runner
      - name: Instalar JMeter
        run: |
          sudo apt-get update
          sudo apt-get install -y jmeter

      # Ejecuta pruebas de rendimiento con JMeter
      - name: Prueba de rendimiento con JMeter
        run: |
          mkdir -p jmeter/reporte-html
          jmeter -n -t ActualizarPesoPerformance.jmx -l jmeter/resultados.jtl -e -o jmeter/reporte-html

      # Sube los reportes generados como artefactos
      - name: Subir reportes como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: reportes-de-pruebas
          path: |
            target/surefire-reports/
            jmeter/reporte-html/
            selenium-tests/logs/