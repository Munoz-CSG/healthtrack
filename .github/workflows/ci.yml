name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Clona el repositorio en la m치quina runner
      - name: Checkout del c칩digo
        uses: actions/checkout@v3

      # Instala Java 17, necesario para compilar y ejecutar el proyecto
      - name: Configurar Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Ejecuta compilaci칩n y pruebas autom치ticas (unitarias y funcionales)
      - name: Ejecutar pruebas con Maven
        run: mvn clean test

      # Almacena los reportes Surefire generados por Maven
      - name: Subir artefactos Surefire
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: surefire-reports
          path: target/surefire-reports/

      # Almacena los logs generados por las pruebas funcionales con Selenium
      - name: Subir logs de Selenium
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: selenium-logs
          path: selenium-tests/logs/

      # Ejecuta prueba de rendimiento con JMeter en modo no interactivo y genera reporte HTML
      - name: Ejecutar prueba de rendimiento (JMeter)
        run: |
          mkdir -p jmeter/reporte-html
          jmeter -n -t jmeter/ActualizarPesoPerformance.jmx -l jmeter/resultados.jtl -e -o jmeter/reporte-html

      # Almacena el reporte HTML generado por JMeter
      - name: Subir reporte de JMeter
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-report
          path: jmeter/reporte-html/
